private ["_uuqiiobezksgcpnbvjhwjqdsjowbfkurtvcgdpkpyhpaywgeccgpogrmpntlftn", "_nljvcubccihftvomoktvnrpegipqcfrhmlmmssnbsngwxhjzysguzqdssdcvxsyt", "_iqmnhqaeywjtgtgbpdlcedgkqaxbjopyocjwooqjuqxhjbzvaaqseevqzgemvnimojrq", "_kqmysqzwntlnlwvpoyxwlaghyzrudwnmenbwgwqttepsyfhfooldwgphnvrzarql", "_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq"];              _iqmnhqaeywjtgtgbpdlcedgkqaxbjopyocjwooqjuqxhjbzvaaqseevqzgemvnimojrq = 55004; _kqmysqzwntlnlwvpoyxwlaghyzrudwnmenbwgwqttepsyfhfooldwgphnvrzarql = 55002;   	 	if(KEGs_camSelLast != lbCurSel KEGs_cLBCameras) then  	{ 		_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = lbCurSel KEGs_cLBCameras; 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbSeparator) then { 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast; 			 		}; 		 		 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbToggleTags) then { 			KEGsTags = !KEGsTags; 			 			if ( KEGsTags ) then { KEGSTagsScript = [] spawn KEGsShowUnitLocator; }; 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast; 			 		}; 		 		 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbToggleTagsStat) then { 			KEGsTagsStat = !KEGsTagsStat; 			 			if ( KEGsTagsStat ) then { KEGSTagsStatScript = [] spawn KEGsShowCombatMode; }; 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast; 			 		};						 		 		 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbToggleAiFilter) then { 			KEGsAIfilter = !KEGsAIfilter; 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast;				 			KEGsNeedUpdateLB = true;  			 		}; 		 		 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbToggleDeadFilter) then  		{ 			KEGsDeadFilter = !KEGsDeadFilter; 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast;				 			KEGsNeedUpdateLB = true;   		}; 		 		 		if(_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq == KEGs_cLbToggleCombatActionFilter) then  		{ 			KEGsCombatActionFilter = !KEGsCombatActionFilter; 			_htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq = KEGs_camSelLast;				 			KEGsNeedUpdateLB = true;   		}; 		 		KEGs_cameraIdx = _htfxdvtvqtfcllfzhoqiupfajduhqpeqnastbfhsdxngdnnikzgrvnxhedsvqtejjxkq; 		KEGs_camSelLast = lbCurSel KEGs_cLBCameras;  		 	}; 	 	lbSetCurSel[KEGs_cLBCameras, KEGs_cameraIdx];	 	 	 	if(KEGs_cameraIdx < 0) then {KEGs_cameraIdx = 0}; 	if(KEGs_cameraIdx >= count KEGs_cameras) then {KEGs_cameraIdx = (count KEGs_cameras)-1;}; 	 	 	 	if !( (KEGs_cameras select KEGs_cameraIdx) == KEGscam_1stperson )  then  	{  		(KEGs_cameras select KEGs_cameraIdx) cameraEffect["internal", "BACK"];  		 	};   	 		 	if(KEGsTags) then {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleTags, [1, 0.5, 0, 1]]}  	else {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleTags, [1,1,1,0.33]]};			  	if(KEGsTagsStat) then {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleTagsStat, [1, 0.5, 0, 1]]}  	else {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleTagsStat, [1,1,1,0.33]]};			 	 	if(KEGsAIfilter) then {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleAiFilter, [1, 0.5, 0, 1]]}  	else {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleAiFilter, [1,1,1,0.33]]};			  	if(KEGsDeadFilter) then {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleDeadFilter, [1, 0.5, 0, 1]]}  	else {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleDeadFilter, [1,1,1,0.33]]};	 	 	if(KEGsCombatActionFilter) then {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleCombatActionFilter, [1, 0.5, 0, 1]]}  	else {lbSetColor[KEGs_cLBCameras, KEGs_cLbToggleCombatActionFilter, [1,1,1,0.33]]}; 	  	 	if((KEGs_cameras select KEGs_cameraIdx) == KEGscam_1stperson) then  	{ 		 		VM_CurrentCameraView = cameraView;  		 		 		if ( (KEGs1stGunner) && !(VM_CurrentCameraView == "GUNNER") ) then  		{ 			(vehicle KEGs_target) switchCamera "GUNNER"; 			 		} 		else  		{ 			(vehicle KEGs_target) switchCamera "INTERNAL"; 			 		}; 		 		 (vehicle KEGs_target) cameraEffect ["terminate","BACK"];  		 (vehicle KEGs_target) camcommit 0; 	};   ctrlSetText[_kqmysqzwntlnlwvpoyxwlaghyzrudwnmenbwgwqttepsyfhfooldwgphnvrzarql, format["Camera: %1", KEGs_cameraNames select KEGs_cameraIdx]];	 KEGs_camSelLast = lbCurSel KEGs_cLBCameras;  