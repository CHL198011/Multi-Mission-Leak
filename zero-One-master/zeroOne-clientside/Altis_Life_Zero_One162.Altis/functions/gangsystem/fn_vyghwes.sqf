private['_mYmj','_qZe','_VSW','_kTg','_ZMmX','_gMJJ','_ddP','_doOS','_iNA'];_iNA = 50000;_mYmj = [ format["Möchtest du %1€ für das Einsehen der Gangliste bezahlen?",[_iNA] call zero_fnc_nAnP], "Gangliste einsehen", localize "STR_Global_Yes", localize "STR_Global_No"] call BIS_fnc_guiMessage;if(!_mYmj) exitWith {};if([2, 0] call zero_fnc_JNHrfnI < _iNA) exitWith {hint format["Du hast nicht genug Geld auf der Bank. Es fehlen dir %1",[_iNA - [2, 0] call zero_fnc_JNHrfnI] call zero_fnc_nAnP];};[0, ([2, 0] call zero_fnc_JNHrfnI) - _iNA] call zero_fnc_JNHrfnI;disableserialization;createdialog "TWXCflNw";_qZe = findDisplay 3300;if (isNull _qZe) exitwith {};_VSW = _qZe displayCtrl 3301;_kTg = _qZe displayCtrl 3302;_ZMmX = _qZe displayCtrl 3303;_ZMmX ctrlShow false;_doOS = _qZe displayCtrl 3304;_doOS ctrlShow false;_VSW ctrlSetStructuredText parseText format["<t align='center' size='1.3'>Hier findest du eine Liste aller aktiven Gangs.</t>"];lbClear _kTg;if(!isNil "sCs") then { { _gMJJ = _x select 0; _ddP = _x select 1; _kTg lbAdd format ["%1 [%2]", _gMJJ, count _ddP]; _kTg lbSetData [(lbSize _kTg)-1,str(_x)]; } forEach sCs;}else{ hc_getGangList = [clientOwner]; HC1_owner publicVariableClient "hc_getGangList"; hc_getGangList = nil; waituntil {!isnil "IGC"}; if (IGC isEqualTo [[]]) then { _kTg lbAdd "Keine Gangs verfügbar"; _kTg lbSetData [(lbSize _kTg)-1,"Null"]; } else { { _gMJJ = _x select 0; _ddP = _x select 1; _kTg lbAdd format ["%1 [%2]", _gMJJ, count _ddP]; _kTg lbSetData [(lbSize _kTg)-1,str(_x)]; } forEach IGC; }; sCs = IGC; IGC = nil;};