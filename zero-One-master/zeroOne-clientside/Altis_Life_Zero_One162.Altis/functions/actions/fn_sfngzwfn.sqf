private['_jPd','_xZP','_kIk','_ZfP'];_xZP = (_this select 3) param[0,"",[""]];if(vehicle player != player) exitWith {hintSilent localize "STR_NOTF_VehicleGetOut"};if(WSKT) exitWith {hint localize "STR_NOTF_Already_DP"};_ZfP = ["dp_1","dp_2","dp_3","dp_4","dp_5","dp_6","dp_7","dp_8","dp_9","dp_10","dp_11","dp_12","dp_13","dp_14","dp_15","dp_15","dp_16","dp_17","dp_18","dp_19","dp_20","dp_21","dp_22","dp_23","dp_24","dp_25"];if(_xZP in _ZfP) then{ _kIk = _ZfP - [_xZP]; _jPd = _kIk call BIS_fnc_selectRandom;}else{ _jPd = _ZfP call BIS_fnc_selectRandom;};gglUXLyt = _xZP;WSKT = true;vRmf = _jPd;_jPd = [_jPd,"_"," "] call KRON_Replace;rIFHLvRk = player createSimpleTask [format["Delivery_%1",vRmf]];rIFHLvRk setSimpleTaskDescription [format[localize "STR_NOTF_DPStart",toUpper _jPd],"Delivery Job",""];rIFHLvRk setTaskState "Assigned";player setCurrentTask rIFHLvRk;["DeliveryAssigned",[format[localize "STR_NOTF_DPTask",toUpper _jPd]]] call bis_fnc_showNotification;[] spawn { waitUntil {!WSKT OR !alive player}; if(!alive player) then { rIFHLvRk setTaskState "Failed"; player removeSimpleTask rIFHLvRk; ["DeliveryFailed",[localize "STR_NOTF_DPFailed"]] call BIS_fnc_showNotification; WSKT = false; vRmf = nil; };};