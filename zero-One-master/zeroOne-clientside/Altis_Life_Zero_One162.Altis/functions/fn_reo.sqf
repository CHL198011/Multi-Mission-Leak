KRON_StrToArray = { private['_uTD','_zFFM','_nPlK','_ARDs']; _uTD=_this select 0; _nPlK = toArray(_uTD); _ARDs=[]; for "_zFFM" from 0 to (count _nPlK)-1 do { _ARDs=_ARDs+[toString([_nPlK select _zFFM])]; }; _ARDs};KRON_StrLeft = { private['_uTD','_CFir','_nPlK','_ARDs']; _uTD=_this select 0; _CFir=(_this select 1)-1; _nPlK=[_uTD] call KRON_StrToArray; _ARDs=""; if (_CFir>=(count _nPlK)) then { _ARDs=_uTD; } else { for "_zFFM" from 0 to _CFir do { _ARDs=_ARDs + (_nPlK select _zFFM); }; }; _ARDs};KRON_StrLen = { private['_uTD','_nPlK','_CFir']; _uTD=_this select 0; _nPlK=[_uTD] call KRON_StrToArray; _CFir=count (_nPlK); _CFir};KRON_StrRight = { private['_uTD','_CFir','_nPlK','_zFFM','_ARDs']; _uTD=_this select 0; _CFir=_this select 1; _nPlK=[_uTD] call KRON_StrToArray; _ARDs=""; if (_CFir>(count _nPlK)) then {_CFir=count _nPlK}; for "_zFFM" from ((count _nPlK)-_CFir) to ((count _nPlK)-1) do { _ARDs=_ARDs + (_nPlK select _zFFM); }; _ARDs}; KRON_StrMid = { private['_uTD','_KxLl','_CFir','_nPlK','_zFFM','_ARDs']; _uTD=_this select 0; _KxLl=abs(_this select 1); _nPlK=[_uTD] call KRON_StrToArray; _CFir=count(_nPlK); if ((count _this)>2) then {_CFir=(_this select 2)}; _ARDs=""; if ((_KxLl+_CFir)>=(count _nPlK)) then {_CFir=(count _nPlK)-_KxLl}; if (_CFir>0) then { for "_zFFM" from _KxLl to (_KxLl+_CFir-1) do { _ARDs=_ARDs + (_nPlK select _zFFM); }; }; _ARDs};KRON_StrIndex = { private['_PPMh','_PKzG','_LQtL','_wDw','_nPlK','_sZlF','_zFFM','_Kgm','_ARDs']; _PPMh=_this select 0; _PKzG=_this select 1; _ARDs=-1; _zFFM=0; if (_PPMh == _PKzG) exitWith {0}; _LQtL=[_PPMh] call KRON_StrLen; _wDw=[_PKzG] call KRON_StrLen; if (_LQtL < _wDw) exitWith {-1}; _nPlK=[_PPMh] call KRON_StrToArray; for "_zFFM" from 0 to (_LQtL-_wDw) do { _sZlF=""; for "_Kgm" from _zFFM to (_zFFM+_wDw-1) do { _sZlF=_sZlF + (_nPlK select _Kgm); }; if (_sZlF==_PKzG) exitWith {_ARDs=_zFFM}; }; _ARDs};KRON_StrInStr = { private['_ARDs']; _uTD=_this select 0; _ARDs=if (([_this select 0,_this select 1] call KRON_StrIndex)==-1) then {false} else {true}; _ARDs};KRON_Replace = { private['_HYl','_CmHX','_MoM','_ARDs','_sZlF','_rgr','_VvFp','_FWF','_wDw','_zFFM']; _HYl=_this select 0; _nPlK=toArray(_HYl); _VvFp=count _nPlK; _CmHX=_this select 1; _MoM=_this select 2; _na=[_MoM] call KRON_StrToArray; _FWF=[_CmHX] call KRON_StrLen; _wDw=[_MoM] call KRON_StrLen; _ARDs=""; for "_zFFM" from 0 to (count _nPlK)-1 do { _sZlF=""; if (_zFFM <= _VvFp-_FWF) then { for "_Kgm" from _zFFM to (_zFFM+_FWF-1) do { _sZlF=_sZlF + toString([_nPlK select _Kgm]); }; }; if (_sZlF==_CmHX) then { _ARDs=_ARDs+_MoM; _zFFM=_zFFM+_FWF-1; } else { _ARDs=_ARDs+toString([_nPlK select _zFFM]); }; }; _ARDs};KRON_StrUpper = { private['_uTD','_ARDs']; _uTD=_this select 0; _ARDs=toUpper(_uTD); _ARDs};KRON_StrLower = { private['_uTD','_ARDs']; _uTD=_this select 0; _ARDs=toLower(_uTD); _ARDs};KRON_ArrayToUpper = { private['_uTD','_zFFM','_ZVqi','_ARDs']; _uTD=_this select 0; _ARDs=[]; if ((count _uTD)>0) then { for "_zFFM" from 0 to (count _uTD)-1 do { _ZVqi=_uTD select _zFFM; if (typeName _ZVqi=="STRING") then { _ZVqi=toUpper(_ZVqi); }; _ARDs set [_zFFM,_ZVqi]; }; }; _ARDs};KRON_Compare = { private['_priI','_xjkt','_eRZR','_zFFM','_LoK','_FPW','_BSd','_YAmP','_osm','_MFbX','_QAle']; _priI=[_this,"CASE"] call KRON_findFlag; _xjkt=0; _eRZR=0; for "_zFFM" from 0 to 1 do { _FPW=_this select _zFFM; switch (typeName _FPW) do { case "SCALAR": {_xjkt=1}; case "BOOL": {_this set [_zFFM,str(_FPW)]}; case "SIDE": {_this set [_zFFM,str(_FPW)]}; case "STRING": {if !(_priI) then {_this=[_this] call KRON_ArrayToUpper}}; default {_xjkt=-1}; }; }; _BSd = _this select 0; _YAmP = _this select 1; if (_xjkt!=0) exitWith { if (_xjkt==1) then { if (_BSd<_YAmP) then {_eRZR=-1} else {if (_BSd>_YAmP) then {_eRZR=1}}; }; _eRZR  }; _BSd = toArray(_BSd); _YAmP = toArray(_YAmP); _osm = count _BSd; _MFbX = count _YAmP; _QAle=if (_osm<_MFbX) then {_osm} else {_MFbX}; for "_zFFM" from 0 to _QAle-1 do { if ((_BSd select _zFFM)<(_YAmP select _zFFM)) then { _eRZR=-1;  _zFFM=_QAle; } else { if ((_BSd select _zFFM)>(_YAmP select _zFFM)) then { _eRZR=1; _zFFM=_QAle; }; }; }; if (_eRZR==0) then { if (_osm<_MFbX) then { _eRZR=-1; } else { if (_osm>_MFbX) then {_eRZR=1}; }; }; _eRZR};KRON_ArraySort = { private['_sxNe','_Jehg','_priI','_eRZR','_zFFM','_mMww','_LlzU','_mUGE','_Kgm','_LoK','_RQR']; _sxNe = +(_this select 0); _Jehg = if ([_this,"DESC"] call KRON_findFlag) then {-1} else {1}; _priI = if ([_this,"CASE"] call KRON_findFlag) then {"CASE"} else {"nocase"}; _eRZR = -1; if (typeName (_sxNe select 0)=="ARRAY") then { _eRZR=0; if (((count _this)>1) && (typeName (_this select 1)=="SCALAR")) then { _eRZR=_this select 1; }; }; for "_zFFM" from 0 to (count _sxNe)-1 do { _mMww = _sxNe select _zFFM; _LlzU = _mMww; if (_eRZR>-1) then {_LlzU=_LlzU select _eRZR}; _Kgm = 0; for [{_Kgm=_zFFM-1},{_Kgm>=0},{_Kgm=_Kgm-1}] do { _mUGE = _sxNe select _Kgm; if (_eRZR>-1) then {_mUGE=_mUGE select _eRZR}; _LoK=[_mUGE,_LlzU,_priI] call KRON_Compare; if (_LoK!=_Jehg) exitWith {}; _sxNe set [_Kgm+1,_sxNe select _Kgm]; }; _sxNe set [_Kgm+1,_mMww]; }; _sxNe};KRON_findFlag = { private['_uTD','_FsFp','_nPlK','_ARDs']; _uTD=_this select 0; _FsFp=toUpper(_this select 1); _nPlK=[_uTD] call KRON_ArrayToUpper; _ARDs=_FsFp in _nPlK; _ARDs};KRON_getArg = { private['_uTD','_FsFp','_CMq','_yCI','_nPlK','_zFFM','_Kgm','_coLn','_ffW','_Txx','_YQq','_ARDs']; _uTD=_this select 0; _FsFp=toUpper(_this select 1); _CMq=[_FsFp] call KRON_StrLen; _ARDs=""; if ((count _this)>2) then {_ARDs=_this select 2}; _nPlK=[_uTD] call KRON_ArrayToUpper; if ((count _nPlK)>0) then { for "_zFFM" from 0 to (count _uTD)-1 do { _coLn = _nPlK select _zFFM; if (typeName _coLn=="STRING") then { _ffW = [_coLn] call KRON_StrToArray; _YQq = _ffW find ":"; if (_YQq==_CMq) then { if (([_coLn,_CMq] call KRON_StrLeft)==_FsFp) then { _Txx = _uTD select _zFFM; _ARDs=[_Txx,_YQq+1] call KRON_StrMid; }; }; }; }; }; _ARDs};KRON_getArgRev = { private['_uTD','_FsFp','_CMq','_yCI','_nPlK','_zFFM','_Kgm','_coLn','_ffW','_Txx','_YQq','_ARDs']; _uTD=_this select 0; _FsFp=toUpper(_this select 1); _CMq=[_FsFp] call KRON_StrLen; _ARDs=""; if ((count _this)>2) then {_ARDs=_this select 2}; _nPlK=[_uTD] call KRON_ArrayToUpper; if ((count _nPlK)>0) then { for "_zFFM" from 0 to (count _uTD)-1 do { _coLn = _nPlK select _zFFM; if (typeName _coLn=="STRING") then { _ffW = [_coLn] call KRON_StrToArray; _YQq = _ffW find ":"; if (_YQq+1==(count _ffW)-_CMq) then { if (([_coLn,_YQq+1] call KRON_StrMid)==_FsFp) then { _Txx = _uTD select _zFFM; _ARDs=[_Txx,_YQq] call KRON_StrLeft; }; }; }; }; }; _ARDs};